---
AWSTemplateFormatVersion: '2010-09-09'
Description: api

Parameters:

  lambdaArn:
    Type: String
    Default: "false"

  PathPart: 
    Type: String
    Default: "false"

Resources:
  api:
    Type: "AWS::ApiGateway::RestApi"
    Properties:
      Name: !Ref "AWS::StackName"
      FailOnWarnings: true

  apiResource:
    Type: "AWS::ApiGateway::Resource"
    DependsOn:
      - api
    Properties:
      RestApiId: !Ref api
      ParentId: !GetAtt api.RootResourceId
      PathPart: !Ref PathPart

  apiGatewayMethodOptions:
    Type: "AWS::ApiGateway::Method"
    DependsOn:
      - apiResource
    Properties:
      ResourceId: !Ref apiResource
      RestApiId: !Ref api
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      MethodResponses:
      -
        StatusCode: 200
        ResponseParameters:
          "method.response.header.Access-Control-Allow-Origin": true
          "method.response.header.Access-Control-Allow-Headers": true
          "method.response.header.Access-Control-Allow-Methods": true
          "method.response.header.Access-Control-Allow-Credentials": true
      Integration:
        Type: MOCK
        RequestTemplates:
          "application/json": "{statusCode:200}"
        IntegrationResponses:
          -
            StatusCode: 200
            ResponseParameters:
              "method.response.header.Access-Control-Allow-Origin": "'*'"
              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,ANY'"
              "method.response.header.Access-Control-Allow-Credentials": "'false'"
            ResponseTemplates:
              "application/json": ""

  apiDeployment:
    DependsOn: 
      - apiGatewayMethod
    Type: "AWS::ApiGateway::Deployment"
    Properties:
      RestApiId: !Ref api
      StageDescription:
        MethodSettings:
          - 
            HttpMethod: "*"
            ResourcePath: "/*"
            ThrottlingBurstLimit: 20
            ThrottlingRateLimit: 5
      StageName: stageTemp

  apiGatewayStageDev:
    DependsOn: 
      - apiDeployment
    Type: AWS::ApiGateway::Stage
    Properties: 
      DeploymentId: !Ref apiDeployment
      MethodSettings:
        -
          DataTraceEnabled: true
          HttpMethod: "*"
          LoggingLevel: INFO
          ResourcePath: "/*"
      RestApiId: !Ref api
      StageName: dev
  apiGatewayStageProd:
    DependsOn: 
      - apiDeployment
    Type: AWS::ApiGateway::Stage
    Properties: 
      DeploymentId: !Ref apiDeployment
      MethodSettings:
        -
          DataTraceEnabled: true
          HttpMethod: "*"
          LoggingLevel: INFO
          ResourcePath: "/*"
      RestApiId: !Ref api
      StageName: prod
  apiGatewayTest:
    DependsOn: 
      - apiDeployment
    Type: AWS::ApiGateway::Stage
    Properties: 
      DeploymentId: !Ref apiDeployment
      MethodSettings:
        -
          DataTraceEnabled: true
          HttpMethod: "*"
          LoggingLevel: INFO
          ResourcePath: "/*"
      RestApiId: !Ref api
      StageName: test

Outputs:
  apiRootResourceId:
    Value: !GetAtt api.RootResourceId
  apiId:
    Value: !Ref api
  apiMethodId:
    Value: !Ref apiGatewayMethodOptions
  apiResourceId:
    Value: !Ref apiResource
  apiDeploymentId:
    Value: !Ref apiDeployment



